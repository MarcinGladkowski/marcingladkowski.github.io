{"componentChunkName":"component---src-templates-post-jsx","path":"/bash-training-2/","result":{"data":{"site":{"siteMetadata":{"title":"marcingladkowski.pl"}},"markdownRemark":{"id":"bfb5e441-259b-507c-943b-881fd3618102","excerpt":"Słowem wstępu W tym wpisie skupię się na możliwościach skryptów powłoki Bash, bezpieczeństwie i dobrych praktykach tworzenia skryptów. Oczywiście temat nie będzie prze zemnie wyczerpany, a jest jedyn…","html":"<h3 id=\"Slowem-wstepu\" style=\"position:relative;\"><a href=\"#Slowem-wstepu\" aria-label=\"Slowem wstepu permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Słowem wstępu</h3>\n<p>W tym wpisie skupię się na możliwościach skryptów powłoki Bash, bezpieczeństwie i dobrych praktykach tworzenia skryptów.</p>\n<p>Oczywiście temat nie będzie prze zemnie wyczerpany, a jest jedynie podstawą dla początkujących tak aby tworzyć wystarczająco dobre skrypty oraz zapobiec pewnym powszechnym błędom.</p>\n<p>W moim repozytoium <a href=\"https://github.com/MarcinGladkowski/bash-training\">bash_training</a> są podstawowe skrypty gdzie zapoznawałem się składnią języka.</p>\n<h3 id=\"Bezpieczenstwo\" style=\"position:relative;\"><a href=\"#Bezpieczenstwo\" aria-label=\"Bezpieczenstwo permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Bezpieczeństwo</h3>\n<h4 id=\"Przytocze-najwazniejsze-zasady-dzialania-z-roznymi-skryptami-w-momencie-gdy-mamy-cos-zrobic-przy-ich-pomocy\" style=\"position:relative;\"><a href=\"#Przytocze-najwazniejsze-zasady-dzialania-z-roznymi-skryptami-w-momencie-gdy-mamy-cos-zrobic-przy-ich-pomocy\" aria-label=\"Przytocze najwazniejsze zasady dzialania z roznymi skryptami w momencie gdy mamy cos zrobic przy ich pomocy permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Przytoczę najważniejsze zasady działania z różnymi skryptami, w momencie gdy mamy coś zrobić przy ich pomocy:</h4>\n<ul>\n<li>Musisz być ostrożnym co wykonujesz!</li>\n<li>Nie uruchamiaj wszystkiego z uprawnieniami <strong>root</strong></li>\n<li>Dodaj <em>alias</em> na komendy systemowe, ktore mogą narobić najwięcej szkód! (np: alias='rm -i')</li>\n<li>Jest wiele możliwości ataku! - nie uruchamiaj skryptów o dziwnej dla Ciebie zawartości</li>\n</ul>\n<h3 id=\"Jak-napisac-wystarczajaco-dobry-skrypt-powloki-\" style=\"position:relative;\"><a href=\"#Jak-napisac-wystarczajaco-dobry-skrypt-powloki-\" aria-label=\"Jak napisac wystarczajaco dobry skrypt powloki  permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Jak napisać wystarczająco dobry skrypt powłoki ?</h3>\n<p>Należy pamiętać, że dobrze napisany skrypt urchoni nas przed problemami. Gdy zrobimy to niedbale możemy stracić ważne dla nas pliki czy uszkodzić nasz system. Mniejszy problem, gdy będzie to tylko nasze lokalne środowisko.</p>\n<p>Rady opisane poniżej będą zaczerpnięte z wpisu na blogu <a href=\"https://devopsiarz.pl/bash/tutorial-kurs-pisania-dobrych-skryptow-bash-wstep-dobre-praktyki-shellcheck/\">https://devopsiarz.pl - wpis</a>.</p>\n<p>Po napisaniu własnego skryptu warto użyć narzędzia do sprawdzenia poprawności składni i potencjalnych problemów. Polecane jest narzędzie <strong>shellcheck</strong>. Do instalacji na <em>Ubuntu</em> wystarczy użyć standardowego managera paczek <code class=\"language-text\">sudo apt-get install -y shellcheck</code></p>\n<p>Użyjemy tego narzędzia do analizy skryptu, którego napisałem ostatnii na potrzeby dodawania nowego pliku z wpisem dla Jeckyll.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token assign-left variable\">POSTS_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">PWD</span>}</span>/_posts/\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Create new post\"</span>\n<span class=\"token assign-left variable\">date</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> <span class=\"token string\">'+%Y-%m-%d'</span><span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Default time for post is <span class=\"token variable\">$date</span>\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Set title of post\"</span>\n<span class=\"token builtin class-name\">read</span> title <span class=\"token comment\"># find idea to get title (set maximum arguments)</span>\n<span class=\"token comment\"># parse setting -</span>\n<span class=\"token assign-left variable\">postFile</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$date</span>-<span class=\"token variable\">${title<span class=\"token operator\">/</span> <span class=\"token operator\">/</span>-}</span>.md\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$postFile</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n   <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Post with name <span class=\"token variable\">$postFile</span> exists!\"</span>\n   <span class=\"token comment\"># want to delete ?</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">NEW_POST_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${POSTS_DIR}</span><span class=\"token variable\">${postFile}</span>\"</span>\n\n<span class=\"token function\">touch</span> <span class=\"token string\">\"<span class=\"token variable\">${POSTS_DIR}</span><span class=\"token variable\">${postFile}</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Created new post! <span class=\"token variable\">${postFile}</span>\"</span>\n\n<span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> <span class=\"token variable\">${NEW_POST_FILE}</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">HEADERS\n---\nlayout: default\ntitle: <span class=\"token variable\">${title}</span>\n---\nHEADERS</span></code></pre></div>\n<p>Wykonajmy teraz analizę przy pomocy <code class=\"language-text\">shellcheck</code> wykonując komendę: <code class=\"language-text\">shellcheck ./scripts/newPost.sh</code></p>\n<p>Output w wierszu poleceń:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">read</span> title <span class=\"token comment\"># find idea to get title (set maximum arguments)</span>\n^--^ SC2162: <span class=\"token builtin class-name\">read</span> without <span class=\"token parameter variable\">-r</span> will mangle backslashes.\n\n\nIn ./scripts/newPost.sh line <span class=\"token number\">13</span>:\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$postFile</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        ^-------^ SC2086: Double quote to prevent globbing and word splitting.\n\nDid you mean:\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token string\">\"<span class=\"token variable\">$postFile</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\n\nIn ./scripts/newPost.sh line <span class=\"token number\">23</span>:\n<span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> <span class=\"token variable\">${NEW_POST_FILE}</span> <span class=\"token operator\">&lt;&lt;</span>HEADERS\n       ^--------------^ SC2086: Double quote to prevent globbing and word splitting.\n\nDid you mean:\n<span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> <span class=\"token string\">\"<span class=\"token variable\">${NEW_POST_FILE}</span>\"</span> <span class=\"token operator\">&lt;&lt;</span>HEADERS\n\nFor <span class=\"token function\">more</span> information:\n  https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing <span class=\"token punctuation\">..</span>.\n  https://www.shellcheck.net/wiki/SC2162 -- <span class=\"token builtin class-name\">read</span> without <span class=\"token parameter variable\">-r</span> will mangle backs<span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>Z powyższej analizy wystarczy, że jeśli dodamy cudzysłów w dwóch miejscach i parametr <code class=\"language-text\">-r</code> do odczytywania inputu możemy poprawić działanie skryptu. Oczywiście to jednak trochę za mało.</p>\n<p>Z przyzwyczajenia często używałem zapisu zmiennych z postaci <code class=\"language-text\">postFile</code>, ale z tego co widzę lepiej z wygląda zapis w postaci <code class=\"language-text\">POST_FILE</code> lub <code class=\"language-text\">post_file</code>.</p>\n<p>Z przytoczonego prze ze mnie wpisu można jednak wyciągnąć dużo więcej.</p>\n<p>Jako, że nigdy nie pisałem za dużo skryptów <code class=\"language-text\">Bash</code> można się jeszcze dużo nauczyć.</p>\n<p>Czego można by jeszcze opisać i nauczyć się, a jest jeszcze sporo tego. Mimo, że jest XXI skrypty <code class=\"language-text\">Bash</code> można spotkać wszędzie np. gdy tworzysz np swój obraz dokera w <code class=\"language-text\">Dockerfile</code>.</p>\n<p>Co chciałym jeszcze opisać:</p>\n<ul>\n<li>Jak tworzyć odpowiednie warunki.</li>\n<li>Sprawdznie odpowiednich oprawnień.</li>\n<li>Tworzenie odpowiedniego skryptu z parametrami przy użyciu <code class=\"language-text\">getopt</code>.</li>\n<li>Kody błędów oraz zwracanie ich, obsługa błędów.</li>\n</ul>\n<p>Pozdrawiam\nMarcin</p>","frontmatter":{"title":"Bash training 2","date":"May 31, 2020","update":"May 13, 2020","tags":["bash"],"series":null},"fields":{"slug":"/bash-training-2/","readingTime":{"minutes":2.7}}},"seriesList":{"edges":[{"node":{"id":"fbead475-1ba0-55c1-986f-e636f28e63e5","fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello world"}}},{"node":{"id":"b247cc5e-3da6-544b-b0e2-b2b7081dd265","fields":{"slug":"/warsawjs-desing-patterns/"},"frontmatter":{"title":"WarsawJs 44 Design patterns"}}},{"node":{"id":"2f6d3669-649d-541e-b324-5397c1ed832e","fields":{"slug":"/about/"},"frontmatter":{"title":"About"}}},{"node":{"id":"59d715d7-36ae-5ec5-a484-8ca5a0eb161f","fields":{"slug":"/bash-training/"},"frontmatter":{"title":"Bash training"}}},{"node":{"id":"bfb5e441-259b-507c-943b-881fd3618102","fields":{"slug":"/bash-training-2/"},"frontmatter":{"title":"Bash training 2"}}},{"node":{"id":"a6c91e31-894a-5e8f-ba50-e7a6081eab36","fields":{"slug":"/summary-2020-plans-for-2021/"},"frontmatter":{"title":"Summary 2020 - plans for 2021"}}},{"node":{"id":"40af6e55-c278-52db-9981-7ece21619c6e","fields":{"slug":"/clean-code-workshop/"},"frontmatter":{"title":"Clean Code workshop"}}},{"node":{"id":"2279682f-3431-5a9b-8232-951fdd913ad3","fields":{"slug":"/python-crash-course/"},"frontmatter":{"title":"Python Crash Course (2nd Edition)"}}},{"node":{"id":"4f5acb7d-1be8-5337-91ab-d6732173e6bc","fields":{"slug":"/simple-object-factory/"},"frontmatter":{"title":"Simple test object factory"}}},{"node":{"id":"3905c451-c52c-580d-9ec8-17379728624e","fields":{"slug":"/where-is-TDD/"},"frontmatter":{"title":"Symfony where is your TDD?"}}},{"node":{"id":"d572f014-1e56-57ef-9f3a-d439e89a35a0","fields":{"slug":"/name-and-tag/"},"frontmatter":{"title":"Give the name and... tag"}}},{"node":{"id":"3a65e50e-87c3-5238-8d14-73e8b69bc3d6","fields":{"slug":"/dw_gym/"},"frontmatter":{"title":"DW Gym - 3 day python challenge"}}},{"node":{"id":"33f95501-bf18-5efa-b9f6-e99ad13bcbde","fields":{"slug":"/symfony-fast-track/"},"frontmatter":{"title":"Symfony Fast Track"}}},{"node":{"id":"d7aa9d73-ab79-5e13-a792-7dc7f77ff0a4","fields":{"slug":"/step-functions-workshop/"},"frontmatter":{"title":"The next step is... AWS Step Functions"}}},{"node":{"id":"0e48ed0c-03da-5695-8ece-d6ec65483624","fields":{"slug":"/phpcon-2022/"},"frontmatter":{"title":"PHPcon Poland 2022"}}},{"node":{"id":"14f466b9-a43e-519e-bca2-7629fb958048","fields":{"slug":"/architecture-hard-parts/"},"frontmatter":{"title":"Compromises"}}},{"node":{"id":"638f6751-4908-5a99-98e4-48eb1eeb4fa3","fields":{"slug":"/kafka-meetup/"},"frontmatter":{"title":"Meetup Kafka Kraków"}}}]},"previous":{"fields":{"slug":"/bash-training/"},"frontmatter":{"title":"Bash training"}},"next":{"fields":{"slug":"/summary-2020-plans-for-2021/"},"frontmatter":{"title":"Summary 2020 - plans for 2021"}}},"pageContext":{"id":"bfb5e441-259b-507c-943b-881fd3618102","series":null,"previousPostId":"59d715d7-36ae-5ec5-a484-8ca5a0eb161f","nextPostId":"a6c91e31-894a-5e8f-ba50-e7a6081eab36"}},"staticQueryHashes":[],"slicesMap":{}}